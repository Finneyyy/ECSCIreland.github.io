<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ireland.re/</id><title>Ireland.RE</title><subtitle>Ireland Without the RE</subtitle> <updated>2023-08-30T21:44:38+00:00</updated> <author> <name>Ireland Without the RE</name> <uri>https://ireland.re/</uri> </author><link rel="self" type="application/atom+xml" href="https://ireland.re/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://ireland.re/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 Ireland Without the RE </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>HITB Phuket 2023</title><link href="https://ireland.re/posts/HITB_Phuket_2023/" rel="alternate" type="text/html" title="HITB Phuket 2023" /><published>2023-08-26T00:00:00+00:00</published> <updated>2023-08-30T13:50:16+00:00</updated> <id>https://ireland.re/posts/HITB_Phuket_2023/</id> <content src="https://ireland.re/posts/HITB_Phuket_2023/" /> <author> <name>Protag</name> </author> <category term="Attack-Defence" /> <summary> Pure Challenge Writeup The official writeup from the organizers is available here. I’m going to let that cover the technical details of the vulnerability as in this writeup I want to focus on the development of the exploit. Initially we got the payload from analysing Tulip logs. We noticed someone with the cookie settings=isAdmin:1 could read any contact on the platform. The contact ids for ... </summary> </entry> <entry><title>Lexington Informatics Tournament CTF 2023</title><link href="https://ireland.re/posts/Lexington_Informatics_Tournament_CTF_23/" rel="alternate" type="text/html" title="Lexington Informatics Tournament CTF 2023" /><published>2023-08-08T00:00:00+00:00</published> <updated>2023-08-30T13:50:16+00:00</updated> <id>https://ireland.re/posts/Lexington_Informatics_Tournament_CTF_23/</id> <content src="https://ireland.re/posts/Lexington_Informatics_Tournament_CTF_23/" /> <author> <name>12thRockYou, m0z</name> </author> <category term="Jeopardy" /> <summary> Pwn My Pet Canary’s Birthday Pie Here is my first c program! I’ve heard about lots of security features in c, whatever they do. The point is, c looks like a very secure language to me! Try breaking it. For this challenge we are given the source code along with the compiled binary. Lets first look at the source code: #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; int win() { system("... </summary> </entry> <entry><title>TheFewChosen 2023</title><link href="https://ireland.re/posts/TheFewChosen_2023/" rel="alternate" type="text/html" title="TheFewChosen 2023" /><published>2023-07-30T00:00:00+00:00</published> <updated>2023-08-30T16:14:33+00:00</updated> <id>https://ireland.re/posts/TheFewChosen_2023/</id> <content src="https://ireland.re/posts/TheFewChosen_2023/" /> <author> <name>Protag, 12thRockYou, m0z</name> </author> <category term="Jeopardy" /> <summary> Crypto Dizzy We’re given this to decipher: T4 l16 _36 510 _27 s26 _11 320 414 {6 }39 C2 T0 m28 317 y35 d31 F1 m22 g19 d38 z34 423 l15 329 c12 ;37 19 h13 _30 F5 t7 C3 325 z33 _21 h8 n18 132 k24 The solution is to rearrange the characters in order and the order is determined by the number attached after it. f = "T4 l16 _36 510 _27 s26 _11 320 414 {6 }39 C2 T0 m28 317 y35 d31 F1 m22 g19 d38 z34 4... </summary> </entry> <entry><title>Enowars 7</title><link href="https://ireland.re/posts/Enowars7/" rel="alternate" type="text/html" title="Enowars 7" /><published>2023-07-22T00:00:00+00:00</published> <updated>2023-08-30T16:10:21+00:00</updated> <id>https://ireland.re/posts/Enowars7/</id> <content src="https://ireland.re/posts/Enowars7/" /> <author> <name>Protag, 12thRockYou</name> </author> <category term="Attack-Defence" /> <summary> Oldschool - Twig SSTI One of the many vulnerabilities from this service was SSTI. The program is using the twig templating engine so a payload like {{7*7}} will result in 49 We exploiting this in the “About me” section of the user profile As a result of this snipped of code. we can pass SSTI payloads into service. From testing it seemed RCE was not going to work. We still had file read ... </summary> </entry> <entry><title>AmateursCTF 2023</title><link href="https://ireland.re/posts/AmateursCTF/" rel="alternate" type="text/html" title="AmateursCTF 2023" /><published>2023-07-20T00:00:00+00:00</published> <updated>2023-08-30T13:50:16+00:00</updated> <id>https://ireland.re/posts/AmateursCTF/</id> <content src="https://ireland.re/posts/AmateursCTF/" /> <author> <name>Protag</name> </author> <category term="Jeopardy" /> <summary> cps remastered The description is already hinting at SQL injection so we know what we’re getting into here It didnt take too long to spot the SQLi in register.php &amp;lt;?php $message = ""; mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT); if (isset($_POST["username"]) &amp;amp;&amp;amp; isset($_POST["password"])) { try{ $mysqli = new mysqli("p:db", "app", "ead5... </summary> </entry> </feed>
